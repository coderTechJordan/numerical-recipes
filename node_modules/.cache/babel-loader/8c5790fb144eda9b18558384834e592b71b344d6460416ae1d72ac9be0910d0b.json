{"ast":null,"code":"// gaussJordan.ts\nimport{NRmatrix}from'./NRmatrix';import{NRvector}from'./NRvector';export function swap(a,b,i){const temp=a[i];a[i]=b[i];b[i]=temp;}export function gaussj(a,b){const n=a.rows;const m=b.cols;const indxc=new NRvector(n);const indxr=new NRvector(n);const ipiv=new NRvector(n);for(let j=0;j<n;j++){ipiv.set(j,0);}for(let i=0;i<n;i++){let big=0.0;let irow=0;let icol=0;for(let j=0;j<n;j++){if(ipiv.get(j)!==1){for(let k=0;k<n;k++){if(ipiv.get(k)===0){if(Math.abs(a.get(j,k))>=big){big=Math.abs(a.get(j,k));irow=j;icol=k;}}}}}ipiv.set(icol,ipiv.get(icol)+1);if(irow!==icol){for(let l=0;l<n;l++){swap(a.getMatrix()[irow],a.getMatrix()[icol],l);}for(let l=0;l<m;l++){swap(b.getMatrix()[irow],b.getMatrix()[icol],l);}}indxr.set(i,irow);indxc.set(i,icol);if(a.get(icol,icol)===0.0){throw new Error(\"gaussj: Singular Matrix\");}const pivinv=1.0/a.get(icol,icol);a.set(icol,icol,1.0);for(let l=0;l<n;l++){a.set(icol,l,a.get(icol,l)*pivinv);}for(let l=0;l<m;l++){b.set(icol,l,b.get(icol,l)*pivinv);}for(let ll=0;ll<n;ll++){if(ll!==icol){const dum=a.get(ll,icol);a.set(ll,icol,0.0);for(let l=0;l<n;l++){a.set(ll,l,a.get(ll,l)-a.get(icol,l)*dum);}for(let l=0;l<m;l++){b.set(ll,l,b.get(ll,l)-b.get(icol,l)*dum);}}}}for(let l=n-1;l>=0;l--){if(indxr.get(l)!==indxc.get(l)){for(let k=0;k<n;k++){swap(a.getMatrix()[k],a.getMatrix()[indxr.get(l)],k);}}}}export function gaussjSingleArg(a){const b=new NRmatrix(a.rows,0);gaussj(a,b);}","map":{"version":3,"names":["NRmatrix","NRvector","swap","a","b","i","temp","gaussj","n","rows","m","cols","indxc","indxr","ipiv","j","set","big","irow","icol","get","k","Math","abs","l","getMatrix","Error","pivinv","ll","dum","gaussjSingleArg"],"sources":["/home/jordan/numerical-recipes/src/models/gaussJordan.ts.tsx"],"sourcesContent":["// gaussJordan.ts\n\nimport { NRmatrix } from './NRmatrix';\nimport { NRvector } from './NRvector';\n\nexport function swap<T>(a: T[], b: T[], i: number): void {\n  const temp = a[i];\n  a[i] = b[i];\n  b[i] = temp;\n}\n\nexport function gaussj(a: NRmatrix<number>, b: NRmatrix<number>): void {\n  const n = a.rows;\n  const m = b.cols;\n  const indxc = new NRvector<number>(n);\n  const indxr = new NRvector<number>(n);\n  const ipiv = new NRvector<number>(n);\n\n  for (let j = 0; j < n; j++) {\n    ipiv.set(j, 0);\n  }\n\n  for (let i = 0; i < n; i++) {\n    let big = 0.0;\n    let irow = 0;\n    let icol = 0;\n\n    for (let j = 0; j < n; j++) {\n      if (ipiv.get(j) !== 1) {\n        for (let k = 0; k < n; k++) {\n          if (ipiv.get(k) === 0) {\n            if (Math.abs(a.get(j, k)) >= big) {\n              big = Math.abs(a.get(j, k));\n              irow = j;\n              icol = k;\n            }\n          }\n        }\n      }\n    }\n\n    ipiv.set(icol, ipiv.get(icol) + 1);\n\n    if (irow !== icol) {\n      for (let l = 0; l < n; l++) {\n        swap(a.getMatrix()[irow], a.getMatrix()[icol], l);\n      }\n\n      for (let l = 0; l < m; l++) {\n        swap(b.getMatrix()[irow], b.getMatrix()[icol], l);\n      }\n    }\n\n    indxr.set(i, irow);\n    indxc.set(i, icol);\n\n    if (a.get(icol, icol) === 0.0) {\n      throw new Error(\"gaussj: Singular Matrix\");\n    }\n\n    const pivinv = 1.0 / a.get(icol, icol);\n    a.set(icol, icol, 1.0);\n\n    for (let l = 0; l < n; l++) {\n      a.set(icol, l, a.get(icol, l) * pivinv);\n    }\n\n    for (let l = 0; l < m; l++) {\n      b.set(icol, l, b.get(icol, l) * pivinv);\n    }\n\n    for (let ll = 0; ll < n; ll++) {\n      if (ll !== icol) {\n        const dum = a.get(ll, icol);\n        a.set(ll, icol, 0.0);\n\n        for (let l = 0; l < n; l++) {\n          a.set(ll, l, a.get(ll, l) - a.get(icol, l) * dum);\n        }\n\n        for (let l = 0; l < m; l++) {\n          b.set(ll, l, b.get(ll, l) - b.get(icol, l) * dum);\n        }\n      }\n    }\n  }\n\n  for (let l = n - 1; l >= 0; l--) {\n    if (indxr.get(l) !== indxc.get(l)) {\n      for (let k = 0; k < n; k++) {\n        swap(a.getMatrix()[k], a.getMatrix()[indxr.get(l)], k);\n      }\n    }\n  }\n}\n\nexport function gaussjSingleArg(a: NRmatrix<number>): void {\n  const b = new NRmatrix<number>(a.rows, 0);\n  gaussj(a, b);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}