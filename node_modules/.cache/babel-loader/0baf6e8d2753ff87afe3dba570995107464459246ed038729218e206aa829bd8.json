{"ast":null,"code":"export class NRmatrix {\n  constructor(n, m, a) {\n    this.nn = void 0;\n    this.mm = void 0;\n    this.v = void 0;\n    this.nn = n;\n    this.mm = m;\n    this.v = Array(n).fill(Array(m).fill(a));\n  }\n  get rows() {\n    return this.nn;\n  }\n  get cols() {\n    return this.mm;\n  }\n  get(row, col) {\n    if (row < 0 || row >= this.nn || col < 0 || col >= this.mm) {\n      throw new Error(\"NRmatrix subscript out of bounds\");\n    }\n    return this.v[row][col];\n  }\n  set(row, col, value) {\n    if (row < 0 || row >= this.nn || col < 0 || col >= this.mm) {\n      throw new Error(\"NRmatrix subscript out of bounds\");\n    }\n    this.v[row][col] = value;\n  }\n  resize(newn, newm, a) {\n    if (newn !== this.nn || newm !== this.mm) {\n      this.nn = newn;\n      this.mm = newm;\n      this.v = Array(newn).fill(Array(newm).fill(a));\n    }\n  }\n\n  // Add more methods as needed\n}","map":{"version":3,"names":["NRmatrix","constructor","n","m","a","nn","mm","v","Array","fill","rows","cols","get","row","col","Error","set","value","resize","newn","newm"],"sources":["/home/jordan/numerical-recipes/src/models/NRmatrix.tsx"],"sourcesContent":["export class NRmatrix<T> {\n  private nn: number;\n  private mm: number;\n  private v: T[][];\n\n  constructor(n: number, m: number, a?: T | T[]) {\n    this.nn = n;\n    this.mm = m;\n    this.v = Array(n).fill(Array(m).fill(a));\n  }\n\n  get rows(): number {\n    return this.nn;\n  }\n\n  get cols(): number {\n    return this.mm;\n  }\n\n  get(row: number, col: number): T {\n    if (row < 0 || row >= this.nn || col < 0 || col >= this.mm) {\n      throw new Error(\"NRmatrix subscript out of bounds\");\n    }\n    return this.v[row][col];\n  }\n\n  set(row: number, col: number, value: T): void {\n    if (row < 0 || row >= this.nn || col < 0 || col >= this.mm) {\n      throw new Error(\"NRmatrix subscript out of bounds\");\n    }\n    this.v[row][col] = value;\n  }\n\n  resize(newn: number, newm: number, a: T): void {\n    if (newn !== this.nn || newm !== this.mm) {\n      this.nn = newn;\n      this.mm = newm;\n      this.v = Array(newn).fill(Array(newm).fill(a));\n    }\n  }\n\n  // Add more methods as needed\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,CAAI;EAKvBC,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAW,EAAE;IAAA,KAJvCC,EAAE;IAAA,KACFC,EAAE;IAAA,KACFC,CAAC;IAGP,IAAI,CAACF,EAAE,GAAGH,CAAC;IACX,IAAI,CAACI,EAAE,GAAGH,CAAC;IACX,IAAI,CAACI,CAAC,GAAGC,KAAK,CAACN,CAAC,CAAC,CAACO,IAAI,CAACD,KAAK,CAACL,CAAC,CAAC,CAACM,IAAI,CAACL,CAAC,CAAC,CAAC;EAC1C;EAEA,IAAIM,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACL,EAAE;EAChB;EAEA,IAAIM,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACL,EAAE;EAChB;EAEAM,GAAGA,CAACC,GAAW,EAAEC,GAAW,EAAK;IAC/B,IAAID,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAI,IAAI,CAACR,EAAE,IAAIS,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAI,IAAI,CAACR,EAAE,EAAE;MAC1D,MAAM,IAAIS,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,OAAO,IAAI,CAACR,CAAC,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC;EACzB;EAEAE,GAAGA,CAACH,GAAW,EAAEC,GAAW,EAAEG,KAAQ,EAAQ;IAC5C,IAAIJ,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAI,IAAI,CAACR,EAAE,IAAIS,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAI,IAAI,CAACR,EAAE,EAAE;MAC1D,MAAM,IAAIS,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,IAAI,CAACR,CAAC,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGG,KAAK;EAC1B;EAEAC,MAAMA,CAACC,IAAY,EAAEC,IAAY,EAAEhB,CAAI,EAAQ;IAC7C,IAAIe,IAAI,KAAK,IAAI,CAACd,EAAE,IAAIe,IAAI,KAAK,IAAI,CAACd,EAAE,EAAE;MACxC,IAAI,CAACD,EAAE,GAAGc,IAAI;MACd,IAAI,CAACb,EAAE,GAAGc,IAAI;MACd,IAAI,CAACb,CAAC,GAAGC,KAAK,CAACW,IAAI,CAAC,CAACV,IAAI,CAACD,KAAK,CAACY,IAAI,CAAC,CAACX,IAAI,CAACL,CAAC,CAAC,CAAC;IAChD;EACF;;EAEA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}