{"ast":null,"code":"export class NRvector{constructor(n,a){this.nn=void 0;this.v=void 0;if(n<=0){throw new Error(\"Invalid vector dimension. Length must be greater than zero.\");}this.nn=n;this.v=Array.isArray(a)?[...a]:Array(n).fill(a===undefined?0:a);}get length(){return this.nn;}get(index){if(index<0||index>=this.nn){throw new Error(\"NRvector subscript out of bounds\");}return this.v[index];}set(index,value){if(index<0||index>=this.nn){throw new Error(\"NRvector subscript out of bounds\");}this.v[index]=value;}resize(newn,a){if(newn!==this.nn){this.nn=newn;this.v=Array(newn).fill(a);}}updateValues(newValues){if(newValues.length!==this.nn){throw new Error(\"Invalid number of elements provided for updating NRvector\");}this.v=newValues;}printToScreen(){return\"[\".concat(this.v.join(', '),\"]\");}updateFromUserInput(inputString){const newValues=inputString.split(',').map(item=>parseFloat(item.trim())).filter(value=>!isNaN(value));if(newValues.length!==this.nn){throw new Error(\"Invalid number of elements provided for updating NRvector. Expected \".concat(this.nn,\" elements.\"));}this.v=newValues;}}","map":{"version":3,"names":["NRvector","constructor","n","a","nn","v","Error","Array","isArray","fill","undefined","length","get","index","set","value","resize","newn","updateValues","newValues","printToScreen","concat","join","updateFromUserInput","inputString","split","map","item","parseFloat","trim","filter","isNaN"],"sources":["/home/jordan/numerical-recipes/src/models/NRvector.tsx"],"sourcesContent":["export class NRvector<T extends number> {\n    private nn: number;\n    private v: T[];\n  \n    constructor(n: number, a?: T | T[]) {\n        if (n <= 0) {\n          throw new Error(\"Invalid vector dimension. Length must be greater than zero.\");\n        }\n    \n        this.nn = n;\n        this.v = Array.isArray(a) ? [...a] : Array(n).fill(a === undefined ? 0 as T : a as T);\n      }\n  \n    get length(): number {\n      return this.nn;\n    }\n  \n    get(index: number): T {\n      if (index < 0 || index >= this.nn) {\n        throw new Error(\"NRvector subscript out of bounds\");\n      }\n      return this.v[index];\n    }\n  \n    set(index: number, value: T): void {\n      if (index < 0 || index >= this.nn) {\n        throw new Error(\"NRvector subscript out of bounds\");\n      }\n      this.v[index] = value;\n    }\n  \n    resize(newn: number, a: T): void {\n      if (newn !== this.nn) {\n        this.nn = newn;\n        this.v = Array(newn).fill(a);\n      }\n    }\n  \n    updateValues(newValues: T[]): void {\n      if (newValues.length !== this.nn) {\n        throw new Error(\"Invalid number of elements provided for updating NRvector\");\n      }\n  \n      this.v = newValues;\n    }\n  \n    printToScreen(): string {\n      return `[${this.v.join(', ')}]`;\n    }\n\n    updateFromUserInput(inputString: string): void {\n        const newValues = inputString\n          .split(',')\n          .map((item) => parseFloat(item.trim()))\n          .filter((value) => !isNaN(value));\n    \n        if (newValues.length !== this.nn) {\n          throw new Error(`Invalid number of elements provided for updating NRvector. Expected ${this.nn} elements.`);\n        }\n    \n        this.v = newValues as T[];\n      }\n    }\n\n  "],"mappings":"AAAA,MAAO,MAAM,CAAAA,QAA2B,CAIpCC,WAAWA,CAACC,CAAS,CAAEC,CAAW,CAAE,MAH5BC,EAAE,aACFC,CAAC,QAGL,GAAIH,CAAC,EAAI,CAAC,CAAE,CACV,KAAM,IAAI,CAAAI,KAAK,CAAC,6DAA6D,CAAC,CAChF,CAEA,IAAI,CAACF,EAAE,CAAGF,CAAC,CACX,IAAI,CAACG,CAAC,CAAGE,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,CAAG,CAAC,GAAGA,CAAC,CAAC,CAAGI,KAAK,CAACL,CAAC,CAAC,CAACO,IAAI,CAACN,CAAC,GAAKO,SAAS,CAAG,CAAC,CAAQP,CAAM,CAAC,CACvF,CAEF,GAAI,CAAAQ,MAAMA,CAAA,CAAW,CACnB,MAAO,KAAI,CAACP,EAAE,CAChB,CAEAQ,GAAGA,CAACC,KAAa,CAAK,CACpB,GAAIA,KAAK,CAAG,CAAC,EAAIA,KAAK,EAAI,IAAI,CAACT,EAAE,CAAE,CACjC,KAAM,IAAI,CAAAE,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACA,MAAO,KAAI,CAACD,CAAC,CAACQ,KAAK,CAAC,CACtB,CAEAC,GAAGA,CAACD,KAAa,CAAEE,KAAQ,CAAQ,CACjC,GAAIF,KAAK,CAAG,CAAC,EAAIA,KAAK,EAAI,IAAI,CAACT,EAAE,CAAE,CACjC,KAAM,IAAI,CAAAE,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACA,IAAI,CAACD,CAAC,CAACQ,KAAK,CAAC,CAAGE,KAAK,CACvB,CAEAC,MAAMA,CAACC,IAAY,CAAEd,CAAI,CAAQ,CAC/B,GAAIc,IAAI,GAAK,IAAI,CAACb,EAAE,CAAE,CACpB,IAAI,CAACA,EAAE,CAAGa,IAAI,CACd,IAAI,CAACZ,CAAC,CAAGE,KAAK,CAACU,IAAI,CAAC,CAACR,IAAI,CAACN,CAAC,CAAC,CAC9B,CACF,CAEAe,YAAYA,CAACC,SAAc,CAAQ,CACjC,GAAIA,SAAS,CAACR,MAAM,GAAK,IAAI,CAACP,EAAE,CAAE,CAChC,KAAM,IAAI,CAAAE,KAAK,CAAC,2DAA2D,CAAC,CAC9E,CAEA,IAAI,CAACD,CAAC,CAAGc,SAAS,CACpB,CAEAC,aAAaA,CAAA,CAAW,CACtB,UAAAC,MAAA,CAAW,IAAI,CAAChB,CAAC,CAACiB,IAAI,CAAC,IAAI,CAAC,MAC9B,CAEAC,mBAAmBA,CAACC,WAAmB,CAAQ,CAC3C,KAAM,CAAAL,SAAS,CAAGK,WAAW,CAC1BC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,EAAKC,UAAU,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CACtCC,MAAM,CAAEf,KAAK,EAAK,CAACgB,KAAK,CAAChB,KAAK,CAAC,CAAC,CAEnC,GAAII,SAAS,CAACR,MAAM,GAAK,IAAI,CAACP,EAAE,CAAE,CAChC,KAAM,IAAI,CAAAE,KAAK,wEAAAe,MAAA,CAAwE,IAAI,CAACjB,EAAE,cAAY,CAAC,CAC7G,CAEA,IAAI,CAACC,CAAC,CAAGc,SAAgB,CAC3B,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}