{"ast":null,"code":"export class NRvector {\n  constructor(n, a) {\n    this.nn = void 0;\n    this.v = void 0;\n    this.nn = n;\n    this.v = Array.isArray(a) ? [...a] : Array(n).fill(a);\n  }\n  get length() {\n    return this.nn;\n  }\n  get(index) {\n    if (index < 0 || index >= this.nn) {\n      throw new Error(\"NRvector subscript out of bounds\");\n    }\n    return this.v[index];\n  }\n  set(index, value) {\n    if (index < 0 || index >= this.nn) {\n      throw new Error(\"NRvector subscript out of bounds\");\n    }\n    this.v[index] = value;\n  }\n  resize(newn, a) {\n    if (newn !== this.nn) {\n      this.nn = newn;\n      this.v = Array(newn).fill(a);\n    }\n  }\n\n  // Add more methods as needed\n}","map":{"version":3,"names":["NRvector","constructor","n","a","nn","v","Array","isArray","fill","length","get","index","Error","set","value","resize","newn"],"sources":["/home/jordan/numerical-recipes/src/models/NRvector.tsx"],"sourcesContent":["export class NRvector<T> {\n    private nn: number;\n    private v: T[];\n  \n    constructor(n: number, a?: T | T[]) {\n      this.nn = n;\n      this.v = Array.isArray(a) ? [...a] : Array(n).fill(a);\n    }\n  \n    get length(): number {\n      return this.nn;\n    }\n  \n    get(index: number): T {\n      if (index < 0 || index >= this.nn) {\n        throw new Error(\"NRvector subscript out of bounds\");\n      }\n      return this.v[index];\n    }\n  \n    set(index: number, value: T): void {\n      if (index < 0 || index >= this.nn) {\n        throw new Error(\"NRvector subscript out of bounds\");\n      }\n      this.v[index] = value;\n    }\n  \n    resize(newn: number, a: T): void {\n      if (newn !== this.nn) {\n        this.nn = newn;\n        this.v = Array(newn).fill(a);\n      }\n    }\n  \n    // Add more methods as needed\n  }"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,CAAI;EAIrBC,WAAWA,CAACC,CAAS,EAAEC,CAAW,EAAE;IAAA,KAH5BC,EAAE;IAAA,KACFC,CAAC;IAGP,IAAI,CAACD,EAAE,GAAGF,CAAC;IACX,IAAI,CAACG,CAAC,GAAGC,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC,GAAGG,KAAK,CAACJ,CAAC,CAAC,CAACM,IAAI,CAACL,CAAC,CAAC;EACvD;EAEA,IAAIM,MAAMA,CAAA,EAAW;IACnB,OAAO,IAAI,CAACL,EAAE;EAChB;EAEAM,GAAGA,CAACC,KAAa,EAAK;IACpB,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACP,EAAE,EAAE;MACjC,MAAM,IAAIQ,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,OAAO,IAAI,CAACP,CAAC,CAACM,KAAK,CAAC;EACtB;EAEAE,GAAGA,CAACF,KAAa,EAAEG,KAAQ,EAAQ;IACjC,IAAIH,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACP,EAAE,EAAE;MACjC,MAAM,IAAIQ,KAAK,CAAC,kCAAkC,CAAC;IACrD;IACA,IAAI,CAACP,CAAC,CAACM,KAAK,CAAC,GAAGG,KAAK;EACvB;EAEAC,MAAMA,CAACC,IAAY,EAAEb,CAAI,EAAQ;IAC/B,IAAIa,IAAI,KAAK,IAAI,CAACZ,EAAE,EAAE;MACpB,IAAI,CAACA,EAAE,GAAGY,IAAI;MACd,IAAI,CAACX,CAAC,GAAGC,KAAK,CAACU,IAAI,CAAC,CAACR,IAAI,CAACL,CAAC,CAAC;IAC9B;EACF;;EAEA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}