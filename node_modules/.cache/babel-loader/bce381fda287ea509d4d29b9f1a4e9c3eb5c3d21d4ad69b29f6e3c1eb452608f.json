{"ast":null,"code":"// NRMat3d module\nexport class NRMat3d {\n  constructor(n, m, k) {\n    this.nn = void 0;\n    this.mm = void 0;\n    this.kk = void 0;\n    this.v = void 0;\n    this.nn = n;\n    this.mm = m;\n    this.kk = k;\n    this.v = Array.from({\n      length: n\n    }, () => Array.from({\n      length: m\n    }, () => Array(k)));\n  }\n  get dim1() {\n    return this.nn;\n  }\n  get dim2() {\n    return this.mm;\n  }\n  get dim3() {\n    return this.kk;\n  }\n  get(i, j, k) {\n    if (i < 0 || i >= this.nn || j < 0 || j >= this.mm || k < 0 || k >= this.kk) {\n      throw new Error(\"NRMat3d subscript out of bounds\");\n    }\n    return this.v[i][j][k];\n  }\n  set(i, j, k, value) {\n    if (i < 0 || i >= this.nn || j < 0 || j >= this.mm || k < 0 || k >= this.kk) {\n      throw new Error(\"NRMat3d subscript out of bounds\");\n    }\n    this.v[i][j][k] = value;\n  }\n\n  // Add more methods as needed\n}","map":{"version":3,"names":["NRMat3d","constructor","n","m","k","nn","mm","kk","v","Array","from","length","dim1","dim2","dim3","get","i","j","Error","set","value"],"sources":["/home/jordan/numerical-recipes/src/models/NRMat3d.tsx"],"sourcesContent":["// NRMat3d module\nexport class NRMat3d<T> {\n    private nn: number;\n    private mm: number;\n    private kk: number;\n    private v: T[][][];\n  \n    constructor(n: number, m: number, k: number) {\n      this.nn = n;\n      this.mm = m;\n      this.kk = k;\n      this.v = Array.from({ length: n }, () =>\n        Array.from({ length: m }, () => Array(k))\n      );\n    }\n  \n    get dim1(): number {\n      return this.nn;\n    }\n  \n    get dim2(): number {\n      return this.mm;\n    }\n  \n    get dim3(): number {\n      return this.kk;\n    }\n  \n    get(i: number, j: number, k: number): T {\n      if (\n        i < 0 ||\n        i >= this.nn ||\n        j < 0 ||\n        j >= this.mm ||\n        k < 0 ||\n        k >= this.kk\n      ) {\n        throw new Error(\"NRMat3d subscript out of bounds\");\n      }\n      return this.v[i][j][k];\n    }\n  \n    set(i: number, j: number, k: number, value: T): void {\n      if (\n        i < 0 ||\n        i >= this.nn ||\n        j < 0 ||\n        j >= this.mm ||\n        k < 0 ||\n        k >= this.kk\n      ) {\n        throw new Error(\"NRMat3d subscript out of bounds\");\n      }\n      this.v[i][j][k] = value;\n    }\n  \n    // Add more methods as needed\n  }"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,CAAI;EAMpBC,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAE;IAAA,KALrCC,EAAE;IAAA,KACFC,EAAE;IAAA,KACFC,EAAE;IAAA,KACFC,CAAC;IAGP,IAAI,CAACH,EAAE,GAAGH,CAAC;IACX,IAAI,CAACI,EAAE,GAAGH,CAAC;IACX,IAAI,CAACI,EAAE,GAAGH,CAAC;IACX,IAAI,CAACI,CAAC,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAET;IAAE,CAAC,EAAE,MACjCO,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAE,CAAC,EAAE,MAAMM,KAAK,CAACL,CAAC,CAAC,CAC1C,CAAC;EACH;EAEA,IAAIQ,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACP,EAAE;EAChB;EAEA,IAAIQ,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACP,EAAE;EAChB;EAEA,IAAIQ,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACP,EAAE;EAChB;EAEAQ,GAAGA,CAACC,CAAS,EAAEC,CAAS,EAAEb,CAAS,EAAK;IACtC,IACEY,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACX,EAAE,IACZY,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACX,EAAE,IACZF,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACG,EAAE,EACZ;MACA,MAAM,IAAIW,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,OAAO,IAAI,CAACV,CAAC,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,CAACb,CAAC,CAAC;EACxB;EAEAe,GAAGA,CAACH,CAAS,EAAEC,CAAS,EAAEb,CAAS,EAAEgB,KAAQ,EAAQ;IACnD,IACEJ,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACX,EAAE,IACZY,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACX,EAAE,IACZF,CAAC,GAAG,CAAC,IACLA,CAAC,IAAI,IAAI,CAACG,EAAE,EACZ;MACA,MAAM,IAAIW,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,IAAI,CAACV,CAAC,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,CAACb,CAAC,CAAC,GAAGgB,KAAK;EACzB;;EAEA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}