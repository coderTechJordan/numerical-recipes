{"ast":null,"code":"var _jsxFileName = \"/home/jordan/numerical-recipes/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { NRvector } from './models/NRvector';\nimport { NRmatrix } from './models/NRmatrix';\nimport { gaussj } from './models/gaussJordan.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = ({\n  year,\n  month,\n  day,\n  setYear,\n  setMonth,\n  setDay,\n  calculateValues\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Update Date:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: year,\n      onChange: e => setYear(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: month,\n      onChange: e => setMonth(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: day,\n      onChange: e => setDay(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: calculateValues,\n    children: \"Calculate\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n_c = InputForm;\nconst VectorUpdate = ({\n  vecLength,\n  setVecLength,\n  updateVector,\n  vec\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Update Vector:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Vector Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: vecLength,\n      onChange: e => setVecLength(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateVector,\n    children: \"Update Vector\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vector-container\",\n    children: vec.printToScreen().split(', ').map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"vector-element\",\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n_c2 = VectorUpdate;\nconst MatrixUpdate = ({\n  matRows,\n  matCols,\n  setMatRows,\n  setMatCols,\n  updateMatrix,\n  mat\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Update Matrix:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Rows:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: matRows,\n      onChange: e => setMatRows(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Columns:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: matCols,\n      onChange: e => setMatCols(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateMatrix,\n    children: \"Update Matrix\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix-container\",\n    children: mat.printToScreen().split('; ').map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-row\",\n      children: row.split(', ').map((element, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matrix-element\",\n        children: element\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n_c3 = MatrixUpdate;\nconst ResultsDisplay = ({\n  julianDay,\n  dateInfo,\n  lunarPhase,\n  gaussjResults\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Results:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Julian Day: \", julianDay !== null ? julianDay : 'N/A']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Date Info: \", dateInfo && `${dateInfo.mm}/${dateInfo.id}/${dateInfo.iyyy}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Lunar Phase: \", lunarPhase && `${lunarPhase.jd}, ${lunarPhase.frac}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Gaussj Results:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this), gaussjResults && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Matrix Dimensions: \", gaussjResults.rows, \" x \", gaussjResults.cols]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-container\",\n      children: gaussjResults.printToScreen().split('; ').map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matrix-row\",\n        children: row.split(', ').map((element, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matrix-element\",\n          children: element\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 3\n}, this);\n\n// Separate component for the main App\n_c4 = ResultsDisplay;\nconst App = () => {\n  _s();\n  const [year, setYear] = useState(2024);\n  const [month, setMonth] = useState(1);\n  const [day, setDay] = useState(6);\n  const [gaussjResults, setGaussjResults] = useState(null); // New state for gaussj results\n\n  const [julianDay, setJulianDay] = useState(null);\n  const [dateInfo, setDateInfo] = useState(null);\n  const [lunarPhase, setLunarPhase] = useState(null);\n  const [vec, setVec] = useState(() => new NRvector(3));\n  const [matRows, setMatRows] = useState(3);\n  const [matCols, setMatCols] = useState(3);\n  const [mat, setMat] = useState(() => new NRmatrix(matRows, matCols, 0));\n  const [vecLength, setVecLength] = useState(3);\n  const handleMatrixError = error => {\n    if (error instanceof Error) {\n      console.error(error.message);\n      window.alert(error.message); // Display an alert on the webpage\n    } else {\n      console.error('An unknown error occurred.');\n      window.alert('An unknown error occurred.'); // Display an alert on the webpage\n    }\n  };\n  const updateMatrix = () => {\n    try {\n      if (matRows <= 0 || matCols <= 0) {\n        throw new Error('Invalid matrix dimensions. Rows and columns must be greater than zero.');\n      }\n      setMat(new NRmatrix(matRows, matCols, 0));\n    } catch (error) {\n      handleMatrixError(error);\n    }\n  };\n  const updateVector = () => {\n    setVec(new NRvector(vecLength));\n  };\n  const calculateValues = () => {\n    setJulianDay(123); // Replace with your calculation logic\n    setDateInfo({\n      mm: 1,\n      id: 6,\n      iyyy: 2024\n    }); // Replace with your calculation logic\n    setLunarPhase({\n      jd: 123,\n      frac: 0.456\n    }); // Replace with your calculation logic\n  };\n  const calculateGaussj = () => {\n    try {\n      const a = new NRmatrix(mat.rows, mat.cols, 0);\n      for (let i = 0; i < mat.rows; i++) {\n        for (let j = 0; j < mat.cols; j++) {\n          a.set(i, j, mat.get(i, j));\n        }\n      }\n      if (a.rows <= 0 || a.cols <= 0) {\n        throw new Error('Invalid matrix dimensions. Rows and columns must be greater than zero.');\n      }\n      const b = new NRmatrix(a.rows, 0);\n      gaussj(a, b);\n      setGaussjResults(a);\n    } catch (error) {\n      handleMatrixError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      year: year,\n      month: month,\n      day: day,\n      setYear: setYear,\n      setMonth: setMonth,\n      setDay: setDay,\n      calculateValues: calculateValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      julianDay: julianDay,\n      dateInfo: dateInfo,\n      lunarPhase: lunarPhase,\n      gaussjResults: gaussjResults // Pass gaussj results to ResultsDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VectorUpdate, {\n      vecLength: vecLength,\n      setVecLength: setVecLength,\n      updateVector: updateVector,\n      vec: vec\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MatrixUpdate, {\n      matRows: matRows,\n      matCols: matCols,\n      setMatRows: setMatRows,\n      setMatCols: setMatCols,\n      updateMatrix: updateMatrix,\n      mat: mat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sJmy5eucrVN8jY9KsAM4C+83uPY=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"InputForm\");\n$RefreshReg$(_c2, \"VectorUpdate\");\n$RefreshReg$(_c3, \"MatrixUpdate\");\n$RefreshReg$(_c4, \"ResultsDisplay\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","NRvector","NRmatrix","gaussj","jsxDEV","_jsxDEV","InputForm","year","month","day","setYear","setMonth","setDay","calculateValues","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseInt","target","onClick","_c","VectorUpdate","vecLength","setVecLength","updateVector","vec","className","printToScreen","split","map","item","index","_c2","MatrixUpdate","matRows","matCols","setMatRows","setMatCols","updateMatrix","mat","row","rowIndex","element","colIndex","_c3","ResultsDisplay","julianDay","dateInfo","lunarPhase","gaussjResults","mm","id","iyyy","jd","frac","rows","cols","_c4","App","_s","setGaussjResults","setJulianDay","setDateInfo","setLunarPhase","setVec","setMat","handleMatrixError","error","Error","console","message","window","alert","calculateGaussj","a","i","j","set","get","b","_c5","$RefreshReg$"],"sources":["/home/jordan/numerical-recipes/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { NRvector } from './models/NRvector';\nimport { NRmatrix } from './models/NRmatrix';\nimport { gaussj } from './models/gaussJordan.ts';\n\ninterface InputFormProps {\n  year: number;\n  month: number;\n  day: number;\n  setYear: React.Dispatch<React.SetStateAction<number>>;\n  setMonth: React.Dispatch<React.SetStateAction<number>>;\n  setDay: React.Dispatch<React.SetStateAction<number>>;\n  calculateValues: () => void;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({\n  year,\n  month,\n  day,\n  setYear,\n  setMonth,\n  setDay,\n  calculateValues,\n}) => (\n  <div>\n    <h3>Update Date:</h3>\n    <label>\n      Year:\n      <input type=\"number\" value={year} onChange={(e) => setYear(parseInt(e.target.value, 10))} />\n    </label>\n    <label>\n      Month:\n      <input type=\"number\" value={month} onChange={(e) => setMonth(parseInt(e.target.value, 10))} />\n    </label>\n    <label>\n      Day:\n      <input type=\"number\" value={day} onChange={(e) => setDay(parseInt(e.target.value, 10))} />\n    </label>\n    <button onClick={calculateValues}>Calculate</button>\n  </div>\n);\n\ninterface VectorUpdateProps {\n  vecLength: number;\n  setVecLength: React.Dispatch<React.SetStateAction<number>>;\n  updateVector: () => void;\n  vec: NRvector<number>;\n}\n\nconst VectorUpdate: React.FC<VectorUpdateProps> = ({ vecLength, setVecLength, updateVector, vec }) => (\n  <div>\n    <h3>Update Vector:</h3>\n    <label>\n      Vector Length:\n      <input type=\"number\" value={vecLength} onChange={(e) => setVecLength(parseInt(e.target.value, 10))} />\n    </label>\n    <button onClick={updateVector}>Update Vector</button>\n    <div className=\"vector-container\">\n      {vec.printToScreen().split(', ').map((item, index) => (\n        <span key={index} className=\"vector-element\">\n          {item}\n        </span>\n      ))}\n    </div>\n  </div>\n);\n\ninterface MatrixUpdateProps {\n  matRows: number;\n  matCols: number;\n  setMatRows: React.Dispatch<React.SetStateAction<number>>;\n  setMatCols: React.Dispatch<React.SetStateAction<number>>;\n  updateMatrix: () => void;\n  mat: NRmatrix<number>;\n}\n\nconst MatrixUpdate: React.FC<MatrixUpdateProps> = ({ matRows, matCols, setMatRows, setMatCols, updateMatrix, mat }) => (\n  <div>\n    <h3>Update Matrix:</h3>\n    <label>\n      Rows:\n      <input type=\"number\" value={matRows} onChange={(e) => setMatRows(parseInt(e.target.value, 10))} />\n    </label>\n    <label>\n      Columns:\n      <input type=\"number\" value={matCols} onChange={(e) => setMatCols(parseInt(e.target.value, 10))} />\n    </label>\n    <button onClick={updateMatrix}>Update Matrix</button>\n    <div className=\"matrix-container\">\n      {mat.printToScreen().split('; ').map((row, rowIndex) => (\n        <div key={rowIndex} className=\"matrix-row\">\n          {row.split(', ').map((element, colIndex) => (\n            <div key={colIndex} className=\"matrix-element\">\n              {element}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\ninterface ResultsDisplayProps {\n  julianDay: number | null;\n  dateInfo: {\n    mm: number;\n    id: number;\n    iyyy: number;\n  } | null;\n  lunarPhase: {\n    jd: number;\n    frac: number;\n  } | null;\n  gaussjResults: NRmatrix<number> | null;\n}\n\nconst ResultsDisplay: React.FC<ResultsDisplayProps> = ({ julianDay, dateInfo, lunarPhase, gaussjResults }) => (\n  <div>\n    <h2>Results:</h2>\n    <p>Julian Day: {julianDay !== null ? julianDay : 'N/A'}</p>\n    <p>Date Info: {dateInfo && `${dateInfo.mm}/${dateInfo.id}/${dateInfo.iyyy}`}</p>\n    <p>Lunar Phase: {lunarPhase && `${lunarPhase.jd}, ${lunarPhase.frac}`}</p>\n\n    {/* Display gaussj results */}\n    <p>Gaussj Results:</p>\n    {gaussjResults && (\n      <div>\n        <p>Matrix Dimensions: {gaussjResults.rows} x {gaussjResults.cols}</p>\n        <div className=\"matrix-container\">\n          {gaussjResults.printToScreen().split('; ').map((row, rowIndex) => (\n            <div key={rowIndex} className=\"matrix-row\">\n              {row.split(', ').map((element, colIndex) => (\n                <div key={colIndex} className=\"matrix-element\">\n                  {element}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    )}\n  </div>\n);\n\n// Separate component for the main App\nconst App: React.FC = () => {\n  const [year, setYear] = useState<number>(2024);\n  const [month, setMonth] = useState<number>(1);\n  const [day, setDay] = useState<number>(6);\n\n  const [gaussjResults, setGaussjResults] = useState<NRmatrix<number> | null>(null); // New state for gaussj results\n\n  const [julianDay, setJulianDay] = useState<number | null>(null);\n  const [dateInfo, setDateInfo] = useState<{ mm: number; id: number; iyyy: number } | null>(null);\n  const [lunarPhase, setLunarPhase] = useState<{ jd: number; frac: number } | null>(null);\n\n  const [vec, setVec] = useState<NRvector<number>>(() => new NRvector<number>(3));\n  const [matRows, setMatRows] = useState<number>(3);\n  const [matCols, setMatCols] = useState<number>(3);\n  const [mat, setMat] = useState<NRmatrix<number>>(() => new NRmatrix<number>(matRows, matCols, 0));\n\n  const [vecLength, setVecLength] = useState<number>(3);\n\n  const handleMatrixError = (error: unknown) => {\n    if (error instanceof Error) {\n      console.error(error.message);\n      window.alert(error.message); // Display an alert on the webpage\n    } else {\n      console.error('An unknown error occurred.');\n      window.alert('An unknown error occurred.'); // Display an alert on the webpage\n    }\n  };\n\n  const updateMatrix = () => {\n    try {\n      if (matRows <= 0 || matCols <= 0) {\n        throw new Error('Invalid matrix dimensions. Rows and columns must be greater than zero.');\n      }\n  \n      setMat(new NRmatrix<number>(matRows, matCols, 0));\n    } catch (error) {\n      handleMatrixError(error);\n    }\n  };\n  \n  const updateVector = () => {\n    setVec(new NRvector<number>(vecLength));\n  };\n\n  const calculateValues = () => {\n    setJulianDay(123); // Replace with your calculation logic\n    setDateInfo({ mm: 1, id: 6, iyyy: 2024 }); // Replace with your calculation logic\n    setLunarPhase({ jd: 123, frac: 0.456 }); // Replace with your calculation logic\n  };\n\n  const calculateGaussj = () => {\n    try {\n      const a = new NRmatrix<number>(mat.rows, mat.cols, 0);\n      for (let i = 0; i < mat.rows; i++) {\n        for (let j = 0; j < mat.cols; j++) {\n          a.set(i, j, mat.get(i, j));\n        }\n      }\n\n      if (a.rows <= 0 || a.cols <= 0) {\n        throw new Error('Invalid matrix dimensions. Rows and columns must be greater than zero.');\n      }\n\n      const b = new NRmatrix<number>(a.rows, 0);\n      gaussj(a, b);\n      setGaussjResults(a);\n    } catch (error) {\n      handleMatrixError(error);\n    }\n  };\n\n  return (\n    <div>\n      <InputForm\n        year={year}\n        month={month}\n        day={day}\n        setYear={setYear}\n        setMonth={setMonth}\n        setDay={setDay}\n        calculateValues={calculateValues}\n      />\n      <ResultsDisplay\n        julianDay={julianDay}\n        dateInfo={dateInfo}\n        lunarPhase={lunarPhase}\n        gaussjResults={gaussjResults} // Pass gaussj results to ResultsDisplay\n      />\n      <VectorUpdate\n        vecLength={vecLength}\n        setVecLength={setVecLength}\n        updateVector={updateVector}\n        vec={vec}\n      />\n      <MatrixUpdate\n        matRows={matRows}\n        matCols={matCols}\n        setMatRows={setMatRows}\n        setMatCols={setMatCols}\n        updateMatrix={updateMatrix}\n        mat={mat}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}