{"ast":null,"code":"// gaussJordan.ts\n\nimport { NRmatrix } from './NRmatrix';\nimport { NRvector } from './NRvector';\nexport function swap(a, b, i) {\n  const temp = a[i];\n  a[i] = b[i];\n  b[i] = temp;\n}\nexport function gaussj(a, b) {\n  const n = a.rows;\n  const m = b.cols;\n  const indxc = new NRvector(n);\n  const indxr = new NRvector(n);\n  const ipiv = new NRvector(n);\n  for (let j = 0; j < n; j++) {\n    ipiv.set(j, 0);\n  }\n  for (let i = 0; i < n; i++) {\n    let big = 0.0;\n    let irow = 0;\n    let icol = 0;\n    for (let j = 0; j < n; j++) {\n      if (ipiv.get(j) !== 1) {\n        for (let k = 0; k < n; k++) {\n          if (ipiv.get(k) === 0) {\n            if (Math.abs(a.get(j, k)) >= big) {\n              big = Math.abs(a.get(j, k));\n              irow = j;\n              icol = k;\n            }\n          }\n        }\n      }\n    }\n    ipiv.set(icol, ipiv.get(icol) + 1);\n    if (irow !== icol) {\n      for (let l = 0; l < n; l++) {\n        swap(a.getMatrix()[irow], a.getMatrix()[icol], l);\n      }\n      for (let l = 0; l < m; l++) {\n        swap(b.getMatrix()[irow], b.getMatrix()[icol], l);\n      }\n    }\n    indxr.set(i, irow);\n    indxc.set(i, icol);\n    if (a.get(icol, icol) === 0.0) {\n      throw new Error(\"gaussj: Singular Matrix\");\n    }\n    const pivinv = 1.0 / a.get(icol, icol);\n    a.set(icol, icol, 1.0);\n    for (let l = 0; l < n; l++) {\n      a.set(icol, l, a.get(icol, l) * pivinv);\n    }\n    for (let l = 0; l < m; l++) {\n      b.set(icol, l, b.get(icol, l) * pivinv);\n    }\n    for (let ll = 0; ll < n; ll++) {\n      if (ll !== icol) {\n        const dum = a.get(ll, icol);\n        a.set(ll, icol, 0.0);\n        for (let l = 0; l < n; l++) {\n          a.set(ll, l, a.get(ll, l) - a.get(icol, l) * dum);\n        }\n        for (let l = 0; l < m; l++) {\n          b.set(ll, l, b.get(ll, l) - b.get(icol, l) * dum);\n        }\n      }\n    }\n  }\n  for (let l = n - 1; l >= 0; l--) {\n    if (indxr.get(l) !== indxc.get(l)) {\n      for (let k = 0; k < n; k++) {\n        swap(a.getMatrix()[k], a.getMatrix()[indxr.get(l)], k);\n      }\n    }\n  }\n}\nexport function gaussjSingleArg(a) {\n  const b = new NRmatrix(a.rows, 0);\n  gaussj(a, b);\n}","map":{"version":3,"names":["NRmatrix","NRvector","swap","a","b","i","temp","gaussj","n","rows","m","cols","indxc","indxr","ipiv","j","set","big","irow","icol","get","k","Math","abs","l","getMatrix","Error","pivinv","ll","dum","gaussjSingleArg"],"sources":["/home/jordan/numerical-recipes/src/models/gaussJordan.ts.tsx"],"sourcesContent":["// gaussJordan.ts\n\nimport { NRmatrix } from './NRmatrix';\nimport { NRvector } from './NRvector';\n\nexport function swap<T>(a: T[], b: T[], i: number): void {\n  const temp = a[i];\n  a[i] = b[i];\n  b[i] = temp;\n}\n\nexport function gaussj(a: NRmatrix<number>, b: NRmatrix<number>): void {\n  const n = a.rows;\n  const m = b.cols;\n  const indxc = new NRvector<number>(n);\n  const indxr = new NRvector<number>(n);\n  const ipiv = new NRvector<number>(n);\n\n  for (let j = 0; j < n; j++) {\n    ipiv.set(j, 0);\n  }\n\n  for (let i = 0; i < n; i++) {\n    let big = 0.0;\n    let irow = 0;\n    let icol = 0;\n\n    for (let j = 0; j < n; j++) {\n      if (ipiv.get(j) !== 1) {\n        for (let k = 0; k < n; k++) {\n          if (ipiv.get(k) === 0) {\n            if (Math.abs(a.get(j, k)) >= big) {\n              big = Math.abs(a.get(j, k));\n              irow = j;\n              icol = k;\n            }\n          }\n        }\n      }\n    }\n\n    ipiv.set(icol, ipiv.get(icol) + 1);\n\n    if (irow !== icol) {\n      for (let l = 0; l < n; l++) {\n        swap(a.getMatrix()[irow], a.getMatrix()[icol], l);\n      }\n\n      for (let l = 0; l < m; l++) {\n        swap(b.getMatrix()[irow], b.getMatrix()[icol], l);\n      }\n    }\n\n    indxr.set(i, irow);\n    indxc.set(i, icol);\n\n    if (a.get(icol, icol) === 0.0) {\n      throw new Error(\"gaussj: Singular Matrix\");\n    }\n\n    const pivinv = 1.0 / a.get(icol, icol);\n    a.set(icol, icol, 1.0);\n\n    for (let l = 0; l < n; l++) {\n      a.set(icol, l, a.get(icol, l) * pivinv);\n    }\n\n    for (let l = 0; l < m; l++) {\n      b.set(icol, l, b.get(icol, l) * pivinv);\n    }\n\n    for (let ll = 0; ll < n; ll++) {\n      if (ll !== icol) {\n        const dum = a.get(ll, icol);\n        a.set(ll, icol, 0.0);\n\n        for (let l = 0; l < n; l++) {\n          a.set(ll, l, a.get(ll, l) - a.get(icol, l) * dum);\n        }\n\n        for (let l = 0; l < m; l++) {\n          b.set(ll, l, b.get(ll, l) - b.get(icol, l) * dum);\n        }\n      }\n    }\n  }\n\n  for (let l = n - 1; l >= 0; l--) {\n    if (indxr.get(l) !== indxc.get(l)) {\n      for (let k = 0; k < n; k++) {\n        swap(a.getMatrix()[k], a.getMatrix()[indxr.get(l)], k);\n      }\n    }\n  }\n}\n\nexport function gaussjSingleArg(a: NRmatrix<number>): void {\n  const b = new NRmatrix<number>(a.rows, 0);\n  gaussj(a, b);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}